version: "3"

services:
    backend:
        build:
          context: ./backend
          dockerfile: Dockerfile
        hostname: django
        ports:
            - 8000:8000
        volumes:
            - ./backend:/code/backend
            - ./backend/static:/static:rw
        environment:
            DJANGO_MODE: production
        depends_on:
            - db
            - rabbitmq
        networks: 
            - nginx_network
        restart: always
    
    db:
        image: "postgres:latest"
        environment:
            POSTGRES_USER: testuser
            POSTGRES_PASSWORD: 123
            POSTGRES_DB: testdb
        networks: 
            - nginx_network
        restart: always
            
    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        volumes:
            - ./frontend/:/code/frontend
        ports: 
            - 3000:3000
        networks: 
            - nginx_network
        depends_on: 
            - backend
        restart: always
    
    rabbitmq:
        image: "rabbitmq"
        hostname: rabbitmq
        networks: 
            - nginx_network
        ports: 
            - 5672:5672
        restart: always
    
    celery:
        build:
            context: ./backend
            dockerfile: Dockerfile-Celery
        volumes:
            - ./backend:/code/backend
        depends_on:
            - db
            - rabbitmq
            - backend
            - scrapy
        networks: 
            - nginx_network
        restart: always

    celery-beat:
        build:
            context: ./backend
            dockerfile: Dockerfile-Celery-beat
        volumes:
            - ./backend:/code/backend
        depends_on:
            - db
            - rabbitmq
            - backend
            - scrapy
            - celery
        networks: 
            - nginx_network
        restart: always

    splash:
        image: "scrapinghub/splash"
        ports: 
            - 8050:8050
            - 5023:5023
            - 8051:8051
        expose: 
            - "8050"
            - "5023"
            - "8051"
        networks: 
            - nginx_network
        restart: always
        environment: 
            max-timeout: 360
    
    scrapy:
        build:
            context: ./scraper
            dockerfile: Dockerfile
        volumes:
            - ./scraper:/code/scraper
        hostname: "scrapy"
        ports: 
            - 6800:6800
        depends_on:
            - db
            - rabbitmq
            - splash
        networks: 
            - nginx_network
        restart: always

    
volumes:
  static:
    
networks:  # <-- and here
    nginx_network:
        driver: "bridge"